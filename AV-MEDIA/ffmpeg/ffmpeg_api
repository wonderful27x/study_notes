===================ffmpeg api====================

//打开本地文件或网络文件，探测文件类型并创建出demuxer解复用器-AVInputFormat
int avformat_open_input(AVFormatContext **ps, const char *filename,const AVInputFormat *fmt, AVDictionary **options)
    //如果传递的上下文为null则创建一个format上下文
    if (!s && !(s = avformat_alloc_context()))
    //初始化input，即根据各种探测，创建出具体的解复用器AVInputFormat，如ff_hls_demuxer
    if ((ret = init_input(s, filename, &tmp)) < 0)
    //创建出解复用的private data,如hls的是HLSContext
    s->priv_data = av_mallocz(s->iformat->priv_data_size)
    //调用解复用AVInputFormat::read_header解析文件,如hls对应的就是hls_read_header
    //具体的解析流程就走具体的实现，如hls就是解析m3u8文件
    //将m3u8的playlist解析到HLSContext中，读取第0个ts分片，探测ts解复用器ff_mpegts_demuxer，解析出pat、pmt
    s->iformat->read_header(s)

//初始化input，即根据各种探测，创建出具体的解复用器AVInputFormat，如ff_hls_demuxer
static int init_input(AVFormatContext *s, const char *filename,AVDictionary **options)
	//如果是用户自定义io,即用户自定义了数据读取方法
	if(s->pb) if(!s->iformat) av_probe_input_buffer2
	//文件名探测？
	if av_probe_input_format2(&pd, 0, &score)
        //在avformat_alloc_context中: s->io_open  = io_open_default;
	//对于hls流媒体来说，io_open_default最终会经过一层层调用，最终查找http协议，并发送下载m3u8文件的请求报文,然后创建AVIOContext,
	//即输入文件对应的AVFormatContext::pb，接下来就可时用这个io读取http响应报文，然后继续探测
	if s->io_open(s, &s->pb, filename, AVIO_FLAG_READ | s->avio_flags, options)
	//对于hls,io_open发送了m3u8文件请求报文，到这里开始使用上面创建的AVIOContext读取http响应报文，并探测解复用为ff_hls_demuxer
        //av_probe_input_buffer2最终又会调用av_probe_input_format2,具体如何探测的又带研究
	if(!s->iformat)av_probe_input_buffer2(s->pb, &s->iformat, filename,s, 0, s->format_probesize)
		avio_read(pb, buf + buf_offset,probe_size - buf_offset)
		pd.buf = &buf[offset];
	        //初始化input，即根据各种探测，创建出具体的解复用器AVInputFormat，如ff_hls_demuxer
		*fmt = av_probe_input_format2(&pd, 1, &score);

//根据url打开文件
static int io_open_default(AVFormatContext *s, AVIOContext **pb,const char *url, int flags, AVDictionary **options)
	ffio_open_whitelist
		//查找网络协议，建立conect,如hls会创建http并配置协议，然后发送下载m3u8文件的请求报文
		ffurl_open_whitelist
	            //创建并配置对应的网络协议
		    int ret = ffurl_alloc(puc, filename, flags, int_cb);
			    //查找对应的网络协议，如hls是http
			    p = url_find_protocol(filename);
			    //创建并配置网络协议
			    url_alloc_for_protocol(puc, p, filename, flags, int_cb);
		    //连接，如hls发送http下载m3u3文件的请求报文
		    ret = ffurl_connect(*puc, options);
			uc->prot->url_open2/uc->prot->url_open
	        //创建AVIOContext,io read 是ffurl_read
	        err = ffio_fdopen(s, h);
	        
//packet读取函数，基于hls,其他类似
demuxer.c:int av_read_frame(AVFormatContext *s, AVPacket *pkt)
	int read_frame_internal(AVFormatContext *s, AVPacket *pkt)
		int ff_read_packet(AVFormatContext *s, AVPacket *pkt)
			ff_hls_demuxer::hls_read_packet
				demuxer.c:av_read_frame
					read_frame_internal
						ff_read_packet
							ff_mpegts_demuxer::mpegts_read_packet
							
							
				

